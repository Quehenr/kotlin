// -- Module: <m1> --
package

package a {

    internal interface A {
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}


// -- Module: <m2> --
package

package a {

    internal interface A {
        // -- Module: <m1> --
    }
}

package b {

    internal interface B {
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        internal abstract fun foo(): [ERROR : A]
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}


// -- Module: <m3> --
package

package b {

    internal interface B {
        // -- Module: <m2> --
    }
}

package c {
    internal fun bar(/*0*/ b: b.B): kotlin.Unit
}
